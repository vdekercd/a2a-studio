@using A2AStudio.Models

<div class="agent-card-compact">
    <div class="agent-card-header-compact">
        @if (!string.IsNullOrEmpty(Agent.ImageUrl))
        {
            <img src="@Agent.ImageUrl" alt="@Agent.Name" class="agent-avatar-compact" />
        }
        else
        {
            <div class="agent-avatar-placeholder-compact">
                <span class="avatar-initials">@GetInitials(Agent.Name)</span>
            </div>
        }
        
        <div class="agent-info-compact">
            <div class="agent-name-compact">@Agent.Name</div>
            @if (!string.IsNullOrEmpty(Agent.Version))
            {
                <span class="agent-version-compact"><span>v</span>@Agent.Version</span>
            }
        </div>
        
        <div class="connection-status-compact">
            <span class="status-indicator @(Agent.IsConnected ? "connected" : "disconnected")"></span>
            @if (Agent.HasValidationIssues)
            {
                <span class="validation-indicator @(Agent.IsValid ? "warning" : "error")" title="@GetValidationTooltip()">
                    <i class="fas @(Agent.IsValid ? "fa-exclamation-triangle" : "fa-times-circle")"></i>
                </span>
            }
            else if (Agent.ValidationResult != null)
            {
                <span class="validation-indicator valid" title="Agent card is valid">
                    <i class="fas fa-check-circle"></i>
                </span>
            }
        </div>
    </div>

    @if (!string.IsNullOrEmpty(Agent.Description))
    {
        <div class="agent-description-compact">
            @Agent.Description
        </div>
    }

    @if (Agent.HasValidationIssues)
    {
        <div class="agent-validation-compact">
            <div class="validation-header">
                <i class="fas @(Agent.IsValid ? "fa-exclamation-triangle" : "fa-times-circle")"></i>
                <span class="validation-title">
                    @(Agent.IsValid ? "Validation Warnings" : "Validation Errors")
                </span>
                <button class="btn btn-link validation-toggle" @onclick="ToggleValidationDetails">
                    <i class="fas @(showValidationDetails ? "fa-chevron-up" : "fa-chevron-down")"></i>
                </button>
            </div>
            
            @if (showValidationDetails && Agent.ValidationResult != null)
            {
                <div class="validation-details">
                    @if (Agent.ValidationResult.Errors.Any())
                    {
                        <div class="validation-section">
                            <h6 class="validation-section-title">
                                <i class="fas fa-times-circle"></i> Errors
                            </h6>
                            <ul class="validation-list">
                                @foreach (var error in Agent.ValidationResult.Errors)
                                {
                                    <li class="validation-error">@error</li>
                                }
                            </ul>
                        </div>
                    }
                    
                    @if (Agent.ValidationResult.Warnings.Any())
                    {
                        <div class="validation-section">
                            <h6 class="validation-section-title">
                                <i class="fas fa-exclamation-triangle"></i> Warnings
                            </h6>
                            <ul class="validation-list">
                                @foreach (var warning in Agent.ValidationResult.Warnings)
                                {
                                    <li class="validation-warning">@warning</li>
                                }
                            </ul>
                        </div>
                    }
                </div>
            }
        </div>
    }

    @if (Agent.Capabilities.Any())
    {
        <div class="agent-capabilities-compact">
            @foreach (var capability in Agent.Capabilities)
            {
                <span class="capability-tag-compact">@capability</span>
            }
        </div>
    }
</div>

