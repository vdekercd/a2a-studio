@using A2AStudio.Models

<style>
    /* JSON Syntax Highlighting - Dark Mode (Default) */
    .json-display .json-string {
        color: #7dd3fc;
    }
    
    .json-display .json-number {
        color: #60a5fa;
        font-weight: 600;
    }
    
    .json-display .json-boolean {
        color: #fb7185;
        font-weight: 600;
    }
    
    .json-display .json-null {
        color: #94a3b8;
        font-style: italic;
    }
    
    .json-display .json-punctuation {
        color: #f97316;
    }
    
    .json-display .json-brace {
        color: #fbbf24;
        font-weight: 600;
    }
    
    .json-display .json-bracket {
        color: #a78bfa;
        font-weight: 600;
    }
    
    /* Light theme overrides */
    [data-theme="light"] .json-display .json-string {
        color: #22863a;
    }
    
    [data-theme="light"] .json-display .json-number {
        color: #005cc5;
    }
    
    [data-theme="light"] .json-display .json-boolean {
        color: #d73a49;
    }
    
    [data-theme="light"] .json-display .json-null {
        color: #6a737d;
    }
    
    [data-theme="light"] .json-display .json-punctuation {
        color: #d73a49;
    }
    
    [data-theme="light"] .json-display .json-brace {
        color: #e36209;
    }
    
    [data-theme="light"] .json-display .json-bracket {
        color: #6f42c1;
    }
</style>

<div class="agent-card-compact">
    <div class="agent-card-header-compact">
        @if (!string.IsNullOrEmpty(Agent.ImageUrl))
        {
            <img src="@Agent.ImageUrl" alt="@Agent.Name" class="agent-avatar-compact" />
        }
        else
        {
            <div class="agent-avatar-placeholder-compact">
                <span class="avatar-initials">@GetInitials(Agent.Name)</span>
            </div>
        }
        
        <div class="agent-info-compact">
            <div class="agent-name-compact">@Agent.Name</div>
            @if (!string.IsNullOrEmpty(Agent.Version))
            {
                <span class="agent-version-compact"><span>v</span>@Agent.Version</span>
            }
        </div>
        
        <div class="connection-status-compact">
            <span class="status-indicator @(Agent.IsConnected ? "connected" : "disconnected")"></span>
            @if (Agent.HasValidationIssues)
            {
                <span class="validation-indicator @(Agent.IsValid ? "warning" : "error")" title="@GetValidationTooltip()">
                    <i class="fas @(Agent.IsValid ? "fa-exclamation-triangle" : "fa-times-circle")"></i>
                </span>
            }
            else if (Agent.ValidationResult != null)
            {
                <span class="validation-indicator valid" title="Agent card is valid">
                    <i class="fas fa-check-circle"></i>
                </span>
            }
            @if (Agent.IsConnected)
            {
                <button class="btn btn-link btn-sm px-1 py-0 json-toggle" @onclick="ToggleJsonDetails" title="View JSON agent card" style="min-width: auto; line-height: 1;">
                    <i class="fas fa-code" style="font-size: 10px;"></i>
                </button>
                @if (showJsonDetails)
                {
                    <button @onclick="ToggleJsonDetails" title="Hide JSON" style="width: 20px; height: 20px; border: 1px solid var(--app-border); background: var(--app-surface); border-radius: 3px; display: flex; align-items: center; justify-content: center; cursor: pointer; transition: all 0.2s ease; padding: 0; margin-left: 4px;" 
                            onmouseover="this.style.background='#dc3545'; this.style.borderColor='#dc3545';" 
                            onmouseout="this.style.background='var(--app-surface)'; this.style.borderColor='var(--app-border)';">
                        <i class="fas fa-times" style="color: var(--app-text-primary); font-size: 8px;"></i>
                    </button>
                }
            }
        </div>
    </div>

    @if (Agent.IsConnected && showJsonDetails)
    {
        <div class="agent-json-below" style="margin-top: 0.75rem;">
            @if (!string.IsNullOrEmpty(agentCardJson))
            {
                <pre class="json-display m-0 p-2" style="max-height: 300px; overflow-y: auto; border: 1px solid var(--app-border); border-radius: 4px; font-size: 11px; background-color: var(--app-bg); color: var(--app-text-primary);"><code>@((MarkupString)FormatJsonWithSyntaxHighlighting(agentCardJson))</code></pre>
            }
            else
            {
                <p class="json-error text-muted small">Unable to load agent JSON data.</p>
            }
        </div>
    }

    @if (!string.IsNullOrEmpty(Agent.Description))
    {
        <div class="agent-description-compact">
            @Agent.Description
        </div>
    }

    @if (Agent.HasValidationIssues)
    {
        <div class="agent-validation-compact">
            <div class="validation-header">
                <i class="fas @(Agent.IsValid ? "fa-exclamation-triangle" : "fa-times-circle")"></i>
                <span class="validation-title">
                    @(Agent.IsValid ? "Validation Warnings" : "Validation Errors")
                </span>
                <button class="btn btn-link validation-toggle" @onclick="ToggleValidationDetails">
                    <i class="fas @(showValidationDetails ? "fa-chevron-up" : "fa-chevron-down")"></i>
                </button>
            </div>
            
            @if (showValidationDetails && Agent.ValidationResult != null)
            {
                <div class="validation-details">
                    @if (Agent.ValidationResult.Errors.Any())
                    {
                        <div class="validation-section">
                            <h6 class="validation-section-title">
                                <i class="fas fa-times-circle"></i> Errors
                            </h6>
                            <ul class="validation-list">
                                @foreach (var error in Agent.ValidationResult.Errors)
                                {
                                    <li class="validation-error">@error</li>
                                }
                            </ul>
                        </div>
                    }
                    
                    @if (Agent.ValidationResult.Warnings.Any())
                    {
                        <div class="validation-section">
                            <h6 class="validation-section-title">
                                <i class="fas fa-exclamation-triangle"></i> Warnings
                            </h6>
                            <ul class="validation-list">
                                @foreach (var warning in Agent.ValidationResult.Warnings)
                                {
                                    <li class="validation-warning">@warning</li>
                                }
                            </ul>
                        </div>
                    }
                </div>
            }
        </div>
    }


    @if (Agent.Capabilities.Any())
    {
        <div class="agent-capabilities-compact">
            @foreach (var capability in Agent.Capabilities)
            {
                <span class="capability-tag-compact">@capability</span>
            }
        </div>
    }
</div>


